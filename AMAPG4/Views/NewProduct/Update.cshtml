@using AMAPG4.Models.Catalog
@using AMAPG4.Models.User
@model AMAPG4.Models.Catalog.NewProduct

@{
    ViewBag.Title = "Modifier la Proposition de Produit";
    Layout = "_BackOfficeLayout";
}

<div class="user-profile-form-container">
    <div class="user-profile">
        <div class="form-header">
            <h1 class="bo-entity">Modifier la proposition de produit n° @Model.Id</h1>
            <a href="@Url.Action("Read", "NewProduct", new { id = Model.Id })" class="btn-action">Retour</a>
        </div>

        @using (Html.BeginForm("Update", "NewProduct", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.HiddenFor(model => model.Id)

            <div class="user-info">
                <label>Nom du produit :</label>
                @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control" })
            </div>

            <div class="user-info">
                <label>Description :</label>
                @Html.TextBoxFor(model => model.Description, new { @class = "form-control" })
            </div>

            <div class="user-info">
                <label>Prix :</label>
                <input type="number" class="form-control" name="Price" step="0.01" value="@ViewBag.FormattedPrice" />
            </div>

            <div class="user-info">
                <label>Quantité en stock :</label>
                @Html.TextBoxFor(model => model.Stock, new { @class = "form-control", type = "number", min = "0" })
            </div>

            <div class="user-info">
                <label>Date limite :</label>
                <input type="date" class="form-control" name="LimitDate" value="@ViewBag.FormattedLimitDate" />
            </div>

            <div class="user-info">
                <label>Type de produit :</label>
                @Html.DropDownListFor(m => m.ProductType, new SelectList(Enum.GetValues(typeof(ProductType)).Cast<ProductType>().Select(e => new SelectListItem { Value = ((int)e).ToString(), Text = e.ToString() }), "Value", "Text"), "Sélectionnez un type", new { @class = "input-field" })
                @Html.ValidationMessageFor(m => m.ProductType, "", new { @class = "error-message" })
            </div>

            <div class="user-info">
                <label>Image du produit :</label>
                <input type="file" name="ProductImage" class="form-control" />
                @if (!string.IsNullOrEmpty(Model.ImagePath))
                {
                    <p>Image actuelle : <img src="@Model.ImagePath" alt="@Model.ProductName" style="width: 100px; height: 100px;" /></p>
                }
            </div>

            <div class="user-actions">
                <button type="submit" class="btn-validate">Valider</button>
            </div>
        }
    </div>
</div>
